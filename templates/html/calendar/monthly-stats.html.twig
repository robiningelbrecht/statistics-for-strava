{% include 'html/navigation/breadcrumbs.html.twig' with {'breadcrumbs': [{
    'url': 'monthly-stats',
    'label': 'Monthly stats'|trans
}]} %}
 {% set totals = monthlyStatistics.getTotals() %}
{% autoescape false %}
    <!-- MONTHLY STATS -->
    <div class="grid grid-cols-1 mb-4">
        <div class="p-4 bg-white border border-gray-200 rounded-lg shadow-xs">
            <div class="flex items-center justify-end mb-2">
                <a href="#" data-model-content-url="{{ relativeUrl('monthly-stats/charts.html') }}"
                   class="inline-flex items-center p-2 text-sm font-medium rounded-lg text-blue-600 hover:bg-gray-100">
                    {{ "View details"|trans }}
                </a>
            </div>
            <div class="overflow-auto max-h-[calc(100vh-200px)] relative">
                <table class="w-full text-sm text-center text-gray-500" data-accordion="table-months"
                       data-active-classes="text-gray-500" data-inactive-classes="text-gray-500">
                    <thead class="z-10 text-gray-700 sticky top-0 text-xs uppercase bg-gray-50">
                    <tr>
                        <th class="px-2"></th>
                        <th scope="col" class="px-2 py-3 sticky left-0 bg-gray-50">

                        </th>
                        <th scope="col" class="px-2 py-3">
                            <div class="leading-7">
                                # {{ "workouts"|trans }}
                            </div>
                            <div class="pt-0.5 normal-case text-xxs">
                                {{ totals.numberOfActivities }}
                            </div>
                        </th>
                        <th scope="col" class="px-6 py-3">
                            <div class="flex items-center justify-center">
                                {{ svg('distance') }}
                            </div>
                            <div class="pt-0.5 normal-case text-xxs">
                                {% set convertedTotalDistance = totals.distance|convertMeasurement %}
                                {{ convertedTotalDistance.toFloat()|formatNumber(0) }}{{ renderUnitSymbol('distance') }}
                            </div>
                        </th>
                        <th scope="col" class="px-6 py-3">
                            <div class="flex items-center justify-center">
                                {{ svg('elevation') }}
                            </div>
                            <div class="pt-0.5 normal-case text-xxs">
                                {% set convertedTotalElevation = totals.elevation|convertMeasurement %}
                                {{ convertedTotalElevation.toFloat()|formatNumber(0) }}{{ renderUnitSymbol('elevation') }}
                            </div>
                        </th>
                        <th scope="col" class="px-6 py-3">
                            <div class="flex items-center justify-center">
                                {{ svg('time') }}
                            </div>
                            <div class="pt-0.5 normal-case text-xxs">
                                {{ totals.movingTime|formatSeconds }}
                            </div>
                        </th>
                        <th scope="col" class="px-6 py-3">
                            <div class="flex items-center justify-center">
                                {{ svg('calories') }}
                            </div>
                            <div class="pt-0.5 normal-case text-xxs">
                                {{ totals.calories|formatNumber(0) }}kcal
                            </div>
                        </th>
                        <th scope="col" class="px-6 py-3">
                            <div class="flex items-center justify-center">
                                {{ svg('challenge') }}
                            </div>
                            <div class="pt-0.5 normal-case text-xxs">
                                {{ challenges|length }}
                            </div>
                        </th>
                    </tr>
                    </thead>
                    {% for month in months %}
                        {% set statsForCurrentMonth = monthlyStatistics.getForMonth(month) %}
                        {% set zebraClasses = cycle(['bg-white', 'bg-gray-50'], loop.index0) %}
                        {% if statsForCurrentMonth|length > 0 %}
                            <tbody>
                            <tr class="{{ zebraClasses }} border-b cursor-pointer"
                                id="table-months-header-{{ loop.index0 }}"
                                data-accordion-target="#table-months-content-{{ loop.index0 }}"
                                aria-expanded="false" aria-controls="table-months-content-{{ loop.index0 }}">
                                <td class="w-[1rem] p-2 text-gray-700">
                                    <svg data-accordion-icon class="size-2 rotate-180 shrink-0" aria-hidden="true"
                                         xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6">
                                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"
                                              stroke-width="2"
                                              d="M9 5 5 1 1 5"/>
                                    </svg>
                                </td>
                                <th scope="row"
                                    class="sticky left-0 w-36 px-2 py-2 text-right font-medium whitespace-nowrap {{ zebraClasses }}">
                                    <a href="#"
                                       data-model-content-url="{{ relativeUrl('month/month-' ~ month.getId() ~ '.html') }}"
                                       class="text-blue-600 hover:underline">
                                        {{ month.getLabel() }}
                                    </a>
                                </th>
                                <td class="px-2 py-2 truncate">
                                    {{ statsForCurrentMonth.numberOfActivities }}
                                </td>
                                <td class="px-2 py-2 truncate">
                                    {{ statsForCurrentMonth.distance|renderMeasurement(0) }}
                                </td>
                                <td class="px-2 py-2 truncate">
                                    {{ statsForCurrentMonth.elevation|renderMeasurement(0) }}
                                </td>
                                <td class="px-2 py-2 truncate">
                                    {{ statsForCurrentMonth.movingTime|formatSeconds }}
                                </td>
                                <td class="px-2 py-2 truncate">
                                    {{ statsForCurrentMonth.calories|formatNumber(0) }}<span class="text-xs">kcal</span>
                                </td>
                                <td class="px-2 py-2 truncate">
                                    {{ challenges|filter(challenge => challenge.getCreatedOn().format('Y-m') == month.getId())|length }}
                                </td>
                            </tr>
                            </tbody>
                            <tbody class="hidden border-b {{ zebraClasses }}"
                                   id="table-months-content-{{ loop.index0 }}"
                                   aria-labelledby="table-months-header-{{ loop.index0 }}">
                            {% for sportType in sportTypes %}
                                {% set totalsForSportType = monthlyStatistics.getForMonthAndSportType(month, sportType) %}
                                {% if totalsForSportType.numberOfActivities > 0 %}
                                    <tr>
                                        <td class="w-[1rem] p-2 text-gray-700">

                                        </td>
                                        <td class="{{ zebraClasses }} text-gray-700 sticky left-0 w-36 px-2 py-2 text-right font-medium whitespace-nowrap">
                                            {{ sportType|trans }}
                                        </td>
                                        <td class="px-2 py-2 truncate">
                                            {{ totalsForSportType.numberOfActivities }}
                                        </td>
                                        <td class="px-2 py-2 truncate">
                                            {{ totalsForSportType.distance|renderMeasurement(0) }}
                                        </td>
                                        <td class="px-2 py-2 truncate">
                                            {{ totalsForSportType.elevation|renderMeasurement(0) }}
                                        </td>
                                        <td class="px-2 py-2 truncate">
                                            {{ totalsForSportType.movingTime|formatSeconds }}
                                        </td>
                                        <td class="px-2 py-2 truncate">
                                            {{ totalsForSportType.calories|formatNumber(0) }}<span
                                                    class="text-xs">kcal</span>
                                        </td>
                                        <td class="px-2 py-2 truncate">

                                        </td>
                                    </tr>
                                {% endif %}
                            {% endfor %}
                            </tbody>
                        {% endif %}
                    {% endfor %}
                </table>
            </div>
        </div>
    </div>
{% endautoescape %}