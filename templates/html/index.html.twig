<!DOCTYPE html>
<html lang="en">
<head>
    <title>{{ "Statistics for Strava"|trans }} | {{ athlete.getName() }}</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width">
    <meta name="theme-color" content="#F26822">
    <meta name="mobile-web-app-title" content="{{ "Statistics for Strava"|trans }} | {{ athlete.getName() }}">
    <meta name="mobile-web-app-capable" content="yes">
    <link href="{{ relativeUrl(asset('manifest.json')) }}" rel="manifest" crossorigin="">
    <link rel="icon" type="image/x-icon" href="{{ relativeUrl('assets/images/logo.svg') }}">
    <link href="{{ relativeUrl(asset('assets/flowbite/tailwind.min.css')) }}" rel="stylesheet"/>
    <link href="{{ relativeUrl(asset('assets/leaflet/leaflet.css')) }}" rel="stylesheet"/>
    <link href="{{ relativeUrl(asset('assets/data-table/clusterize.min.css')) }}" rel="stylesheet">
    <link href="{{ relativeUrl(asset('assets/lightgallery/lightgallery-bundle.min.css')) }}" rel="stylesheet">
</head>
<body>
<div class="antialiased bg-gray-50">
    <!-- NAVIGATION -->
    {% autoescape false %}
        {{ renderComponent('top-nav-bar', {'subTitle': subTitle, 'profilePictureUrl': profilePictureUrl, 'athlete': athlete}) }}
    {% endautoescape %}
    <!-- SIDEBAR -->
    <aside class="group fixed top-0 left-0 w-64 [&.sidebar-is-collapsed]:w-32 h-screen pt-14 transition-transform -translate-x-full bg-white border-r border-gray-200 md:translate-x-0 z-1001"
           aria-label="Sidenav" id="drawer-navigation">
        {% set menuLinkClasses = 'flex items-center gap-x-3 group/menu-item p-2 text-base font-medium text-gray-900 rounded-lg hover:bg-gray-100 aria-selected:bg-gray-100' %}
        {% set collapsedMenuLinkClasses = 'group-[.sidebar-is-collapsed]:flex-col group-[.sidebar-is-collapsed]:gap-y-0.5 group-[.sidebar-is-collapsed]:text-xs' %}
        {% set menulinkSvgIconClasses = 'shrink-0 w-6 h-6 text-gray-500 transition duration-75 group-hover/menu-item:text-gray-900' %}
        <div class="group-[.sidebar-is-collapsed]:max-h-full max-h-[calc(100vh-160px)] overflow-y-auto py-5 px-3 h-full bg-white divide-y divide-gray-200">
            <ul class="space-y-1 pb-2">
                <li>
                    <a href="#" data-router-navigate="{{ relativeUrl('dashboard') }}"
                       class="{{ menuLinkClasses }} {{ collapsedMenuLinkClasses }}">
                        <svg aria-hidden="true"
                             class="{{ menulinkSvgIconClasses }}"
                             xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6.025A7.5 7.5 0 1 0 17.975 14H10V6.025Z"/>
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.5 3c-.169 0-.334.014-.5.025V11h7.975c.011-.166.025-.331.025-.5A7.5 7.5 0 0 0 13.5 3Z"/>
                        </svg>
                        <span class="flex-1 whitespace-nowrap">{{ "Dashboard"|trans }}</span>
                    </a>
                </li>
            </ul>
            <ul class="space-y-1 py-2">
                <li>
                    <a href="#" data-router-navigate="{{ relativeUrl('activities') }}"
                       class="{{ menuLinkClasses }} {{ collapsedMenuLinkClasses }}">
                        <svg class="{{ menulinkSvgIconClasses }}" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 9h6m-6 3h6m-6 3h6M6.996 9h.01m-.01 3h.01m-.01 3h.01M4 5h16a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1Z"/>
                        </svg>
                        <span class="flex-1 whitespace-nowrap">{{ "Activities"|trans|ellipses(19) }}</span>
                        <span class="group-[.sidebar-is-collapsed]:hidden bg-orange-400/40 text-orange-800 text-xs font-medium px-2.5 py-0.5 rounded-full">{{ totalActivityCount }}</span>
                    </a>
                </li>
                <li>
                    <a href="#" data-router-navigate="{{ relativeUrl('gear') }}"
                       class="{{ menuLinkClasses }} {{ collapsedMenuLinkClasses }}">
                        <svg class="{{ menulinkSvgIconClasses }}" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m10.051 8.102-3.778.322-1.994 1.994a.94.94 0 0 0 .533 1.6l2.698.316m8.39 1.617-.322 3.78-1.994 1.994a.94.94 0 0 1-1.595-.533l-.4-2.652m8.166-11.174a1.366 1.366 0 0 0-1.12-1.12c-1.616-.279-4.906-.623-6.38.853-1.671 1.672-5.211 8.015-6.31 10.023a.932.932 0 0 0 .162 1.111l.828.835.833.832a.932.932 0 0 0 1.111.163c2.008-1.102 8.35-4.642 10.021-6.312 1.475-1.478 1.133-4.77.855-6.385Zm-2.961 3.722a1.88 1.88 0 1 1-3.76 0 1.88 1.88 0 0 1 3.76 0Z"/>
                        </svg>
                        <span class="flex-1 whitespace-nowrap">{{ "Gear"|trans|ellipses(23) }}</span>
                        {% if maintenanceTaskIsDue %}
                            <span class="group-[.sidebar-is-collapsed]:hidden flex w-3 h-3 me-3 bg-red-500 rounded-full animate-pulse"
                                  title="{{ "One of your gear maintenance tasks is due"|trans }}"></span>
                        {% endif %}
                    </a>
                </li>
                <li>
                    <a href="#" data-router-navigate="{{ relativeUrl('segments') }}"
                       class="{{ menuLinkClasses }} {{ collapsedMenuLinkClasses }}">
                        <svg class="{{ menulinkSvgIconClasses }}"
                             fill="currentColor" viewBox="0 0 256 256" xmlns="http://www.w3.org/2000/svg">
                            <g stroke-width="0"></g>
                            <g stroke-linecap="round" stroke-linejoin="round"></g>
                            <g>
                                <path d="M217.45557,38.544a35.9967,35.9967,0,0,0-57.937,40.96679L79.5105,159.51855a36.05906,36.05906,0,0,0-40.96607,7.0254H38.544a36.00029,36.00029,0,1,0,57.93737,9.94531L176.4895,96.48145A35.99663,35.99663,0,0,0,217.45557,38.544ZM72.48584,200.48535a12.00027,12.00027,0,0,1-16.97119-16.9707h-.00049a12.00044,12.00044,0,0,1,16.97168,16.9707Zm128-128a12.01673,12.01673,0,0,1-16.969.00244l-.0022-.00244a12.0001,12.0001,0,1,1,16.97119,0Z"></path>
                            </g>
                        </svg>
                        <span class="flex-1 whitespace-nowrap">{{ "Segments"|trans|ellipses(23) }}</span>
                    </a>
                </li>
            </ul>
            <ul class="space-y-1 py-2">
                <li>
                    <a href="#" data-router-navigate="{{ relativeUrl('monthly-stats') }}"
                       class="{{ menuLinkClasses }} {{ collapsedMenuLinkClasses }}">
                        <svg class="{{ menulinkSvgIconClasses }}" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 10h16m-8-3V4M7 7V4m10 3V4M5 20h14a1 1 0 0 0 1-1V7a1 1 0 0 0-1-1H5a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1Zm3-7h.01v.01H8V13Zm4 0h.01v.01H12V13Zm4 0h.01v.01H16V13Zm-8 4h.01v.01H8V17Zm4 0h.01v.01H12V17Zm4 0h.01v.01H16V17Z"/>
                        </svg>
                        <span class="flex-1 whitespace-nowrap">{{ "Monthly stats"|trans|ellipses(23) }}</span>
                    </a>
                </li>
                <li>
                    <a href="#" data-router-navigate="{{ relativeUrl('eddington') }}"
                       class="{{ menuLinkClasses }} {{ collapsedMenuLinkClasses }}">
                        <svg class="{{ menulinkSvgIconClasses }}" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4.5V19a1 1 0 0 0 1 1h15M7 14l4-4 4 4 5-5m0 0h-3.207M20 9v3.207"/>
                        </svg>
                        <span class="flex-1 whitespace-nowrap">Eddington</span>
                        <div class="group-[.sidebar-is-collapsed]:hidden flex gap-x-0.5">
                            {% for eddingtonNumber in eddingtonNumbers|slice(0, 2) %}
                                <span class="bg-orange-400/40 text-orange-800 text-xs font-medium px-2.5 py-0.5 rounded-full">{{ eddingtonNumber }}</span>
                            {% endfor %}
                        </div>
                    </a>
                </li>
                <li>
                    <a href="#" data-router-navigate="{{ relativeUrl('heatmap') }}"
                       class="{{ menuLinkClasses }} {{ collapsedMenuLinkClasses }}">
                        <svg class="{{ menulinkSvgIconClasses }}"
                             viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <g stroke-width="0"></g>
                            <g stroke-linecap="round" stroke-linejoin="round"></g>
                            <g>
                                <path d="M3 8.70938C3 7.23584 3 6.49907 3.39264 6.06935C3.53204 5.91678 3.70147 5.79466 3.89029 5.71066C4.42213 5.47406 5.12109 5.70705 6.51901 6.17302C7.58626 6.52877 8.11989 6.70665 8.6591 6.68823C8.85714 6.68147 9.05401 6.65511 9.24685 6.60952C9.77191 6.48541 10.2399 6.1734 11.176 5.54937L12.5583 4.62778C13.7574 3.82843 14.3569 3.42876 15.0451 3.3366C15.7333 3.24444 16.4168 3.47229 17.7839 3.92799L18.9487 4.31624C19.9387 4.64625 20.4337 4.81126 20.7169 5.20409C21 5.59692 21 6.11871 21 7.16229V15.2907C21 16.7642 21 17.501 20.6074 17.9307C20.468 18.0833 20.2985 18.2054 20.1097 18.2894C19.5779 18.526 18.8789 18.293 17.481 17.827C16.4137 17.4713 15.8801 17.2934 15.3409 17.3118C15.1429 17.3186 14.946 17.3449 14.7532 17.3905C14.2281 17.5146 13.7601 17.8266 12.824 18.4507L11.4417 19.3722C10.2426 20.1716 9.64311 20.5713 8.95493 20.6634C8.26674 20.7556 7.58319 20.5277 6.21609 20.072L5.05132 19.6838C4.06129 19.3538 3.56627 19.1888 3.28314 18.7959C3 18.4031 3 17.8813 3 16.8377V8.70938Z"
                                      stroke="currentColor" stroke-width="2"></path>
                                <path d="M9 6.63867V20.5" stroke="currentColor" stroke-width="2"></path>
                                <path d="M15 3V17" stroke="currentColor" stroke-width="2"></path>
                            </g>
                        </svg>
                        <span class="flex-1 whitespace-nowrap">{{ "Heatmap"|trans|ellipses(23) }}</span>
                    </a>
                </li>
                <li>
                    <a href="#" data-router-navigate="{{ relativeUrl('rewind') }}"
                       class="{{ menuLinkClasses }} {{ collapsedMenuLinkClasses }}">
                        <svg class="{{ menulinkSvgIconClasses }}" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3M3.22302 14C4.13247 18.008 7.71683 21 12 21c4.9706 0 9-4.0294 9-9 0-4.97056-4.0294-9-9-9-3.72916 0-6.92858 2.26806-8.29409 5.5M7 9H3V5"/>
                        </svg>
                        <span class="flex-1 whitespace-nowrap">{{ "Rewind"|trans|ellipses(23) }}</span>
                    </a>
                </li>
            </ul>
            <ul class="space-y-1 pt-2">
                <li>
                    <a href="#" data-router-navigate="{{ relativeUrl('challenges') }}"
                       class="{{ menuLinkClasses }} {{ collapsedMenuLinkClasses }}">
                        <svg class="{{ menulinkSvgIconClasses }}" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m8.032 12 1.984 1.984 4.96-4.96m4.55 5.272.893-.893a1.984 1.984 0 0 0 0-2.806l-.893-.893a1.984 1.984 0 0 1-.581-1.403V7.04a1.984 1.984 0 0 0-1.984-1.984h-1.262a1.983 1.983 0 0 1-1.403-.581l-.893-.893a1.984 1.984 0 0 0-2.806 0l-.893.893a1.984 1.984 0 0 1-1.403.581H7.04A1.984 1.984 0 0 0 5.055 7.04v1.262c0 .527-.209 1.031-.581 1.403l-.893.893a1.984 1.984 0 0 0 0 2.806l.893.893c.372.372.581.876.581 1.403v1.262a1.984 1.984 0 0 0 1.984 1.984h1.262c.527 0 1.031.209 1.403.581l.893.893a1.984 1.984 0 0 0 2.806 0l.893-.893a1.985 1.985 0 0 1 1.403-.581h1.262a1.984 1.984 0 0 0 1.984-1.984V15.7c0-.527.209-1.031.581-1.403Z"/>
                        </svg>
                        <span class="flex-1 whitespace-nowrap">{{ "Challenges"|trans|ellipses(19) }}</span>
                        <span class="group-[.sidebar-is-collapsed]:hidden bg-orange-400/40 text-orange-800 text-xs font-medium px-2.5 py-0.5 rounded-full">{{ completedChallenges }}</span>
                    </a>
                </li>
                <li>
                    <a href="#" data-router-navigate="{{ relativeUrl('photos') }}"
                       class="{{ menuLinkClasses }} {{ collapsedMenuLinkClasses }}">
                        <svg class="{{ menulinkSvgIconClasses }}" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                            <path stroke="currentColor" stroke-linejoin="round" stroke-width="2" d="M4 18V8a1 1 0 0 1 1-1h1.5l1.707-1.707A1 1 0 0 1 8.914 5h6.172a1 1 0 0 1 .707.293L17.5 7H19a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1Z"/>
                            <path stroke="currentColor" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z"/>
                        </svg>
                        <span class="flex-1 whitespace-nowrap">{{ "Photos"|trans|ellipses(19) }}</span>
                        <span class="group-[.sidebar-is-collapsed]:hidden bg-orange-400/40 text-orange-800 text-xs font-medium px-2.5 py-0.5 rounded-full">{{ totalPhotoCount }}</span>
                    </a>
                </li>
            </ul>
        </div>
        <div class="absolute flex flex-col justify-center bottom-0 left-0 w-full bg-white z-20">
            <div class="group-[.sidebar-is-collapsed]:hidden py-2 px-4 text-xs text-center text-gray-500">
                <div class="flex justify-center gap-px">
                    <a href="https://www.strava.com/athletes/{{ athlete.getAthleteId() }}" target="_blank"
                       class="p-2 text-gray-500 rounded-sm cursor-pointer hover:text-[#fc4c01] hover:bg-gray-100">
                        <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <g stroke-width="0"></g>
                            <g stroke-linecap="round" stroke-linejoin="round"></g>
                            <g>
                                <path d="M15.387 17.944l-2.089-4.116h-3.065L15.387 24l5.15-10.172h-3.066m-7.008-5.599l2.836 5.598h4.172L10.463 0l-7 13.828h4.169"></path>
                            </g>
                        </svg>
                    </a>
                    <a href="#" data-model-content-url="{{ relativeUrl('badge.html') }}" title="Show badge"
                       class="p-2 text-gray-500 rounded-sm cursor-pointer hover:text-[#fc4c01] hover:bg-gray-100">
                        <svg class="w-6 h-6" fill="currentColor" xmlns="http://www.w3.org/2000/svg"
                             xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 507.9 507.9" xml:space="preserve">
                    <g stroke-width="0"></g>
                            <g stroke-linecap="round" stroke-linejoin="round"></g>
                            <g>
                                <g>
                                    <g>
                                        <path d="M465.7,96.55H324.9v-21.6c0-7.8-6.3-14.1-14.1-14.1H197.2c-7.8,0-14.1,6.3-14.1,14.1v21.6H42.3c-23.3,0-42.3,19-42.3,42.3 v265.9c0,23.3,19,42.3,42.3,42.3h423.3c23.3,0,42.3-19,42.3-42.3v-265.9C508,115.55,489,96.55,465.7,96.55z M296.7,89.05v32.1 h-85.4v-32.1H296.7z M465.7,418.85H42.3c-7.8,0-14.1-6.3-14.1-14.1v-265.9c0-7.8,6.3-14.1,14.1-14.1h140.8v10.5 c0,7.8,6.3,14.1,14.1,14.1h113.6c7.8,0,14.1-6.3,14.1-14.1v-10.5h140.7c7.8,0,14.1,6.3,14.1,14.1v265.9h0.1 C479.8,412.55,473.5,418.85,465.7,418.85z"></path>
                                    </g>
                                </g>
                                <g>
                                    <g>
                                        <path d="M440.6,173.65H254c-7.8,0-14.1,6.3-14.1,14.1s6.3,14.1,14.1,14.1h186.6c7.8,0,14.1-6.3,14.1-14.1 S448.4,173.65,440.6,173.65z"></path>
                                    </g>
                                </g>
                                <g>
                                    <g>
                                        <path d="M440.6,241.95H254c-7.8,0-14.1,6.3-14.1,14.1s6.3,14.1,14.1,14.1h186.6c7.8,0,14.1-6.3,14.1-14.1 C454.7,248.25,448.4,241.95,440.6,241.95z"></path>
                                    </g>
                                </g>
                                <g>
                                    <g>
                                        <path d="M440.6,310.35H254c-7.8,0-14.1,6.3-14.1,14.1c0,7.8,6.3,14.1,14.1,14.1h186.6c7.8,0,14.1-6.3,14.1-14.1 S448.4,310.35,440.6,310.35z"></path>
                                    </g>
                                </g>
                                <g>
                                    <g>
                                        <path d="M180.1,160.45H67.4c-7.8,0-14.1,6.3-14.1,14.1v130.5c0,7.8,6.3,14.1,14.1,14.1h112.7c7.8,0,14.1-6.3,14.1-14.1v-130.5 C194.2,166.85,187.9,160.45,180.1,160.45z M166,290.95H81.6v-102.2H166V290.95z"></path>
                                    </g>
                                </g>
                                <g>
                                    <g>
                                        <path d="M180.1,354.85H67.4c-7.8,0-14.1,6.3-14.1,14.1c0,7.8,6.3,14.1,14.1,14.1h112.7c7.8,0,14.1-6.3,14.1-14.1 S187.9,354.85,180.1,354.85z"></path>
                                    </g>
                                </g>
                            </g>
                </svg>
                    </a>
                </div>
                <div class="flex justify-center gap-x-1">
                    <span>{{ appVersion.getSemanticVersion() }}</span>
                    <span class="hidden" data-latest-version
                          data-current-version="{{ appVersion.getSemanticVersion() }}">
                    (latest: <a class="underline"
                                href="https://github.com/robiningelbrecht/statistics-for-strava/releases/tag/[LATEST_VERSION]">[LATEST_VERSION]</a>)
                </span>
                </div>
                <div>
                    {{ "Updated on"|trans }} {{ lastUpdate|formatDate('normal') }} {{ lastUpdate|formatTime() }}
                </div>
            </div>
            <div class="flex gap-x-1 items-center justify-center border-t py-2 px-4 text-xs text-center text-gray-500">
                <img class="h-[12px]" src="{{ relativeUrl('assets/images/strava/powered-by-strava.svg') }}"
                     alt="Powered by Strava"/>
                <div class="group-[.sidebar-is-collapsed]:hidden">& ☕</div>
            </div>
        </div>

    </aside>
    <!-- MAIN -->
    <main class="p-4 md:ml-64 [&.sidebar-is-collapsed]:md:ml-32 h-auto min-h-screen pt-20 text-gray-900">
        <div id="spinner" class="items-center justify-center h-auto min-h-screen hidden">
            <div role="status">
                <svg aria-hidden="true"
                     class="w-8 h-8 mr-2 text-gray-200 animate-spin fill-orange-500"
                     viewBox="0 0 100 101" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z"
                          fill="currentColor"/>
                    <path d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z"
                          fill="currentFill"/>
                </svg>
                <span class="sr-only">{{ "Loading..."|trans }}</span>
            </div>
        </div>
        <!-- JS LOADED CONTENT -->
        <div id="js-loaded-content"></div>
        <div id="modal-skeleton" tabindex="-1" aria-hidden="true"
             class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-1500 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full">
            <div class="relative p-4 w-full max-w-7xl max-h-full">
                <!-- Modal spinner -->
                <div class="spinner hidden p-4 items-center justify-center h-auto bg-white rounded-lg shadow-sm">
                    <div role="status">
                        <svg aria-hidden="true"
                             class="w-8 h-8 mr-2 text-gray-200 animate-spin fill-orange-500"
                             viewBox="0 0 100 101" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z"
                                  fill="currentColor"/>
                            <path d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z"
                                  fill="currentFill"/>
                        </svg>
                        <span class="sr-only">{{ "Loading..."|trans }}</span>
                    </div>
                </div>
                <!-- Modal content -->
                <div id="modal-content" class="relative bg-white rounded-lg shadow-sm">

                </div>
            </div>
        </div>
    </main>
</div>

<script>
    window.statisticsForStrava = {{ javascriptWindowConstants|raw }};
    window.statisticsForStrava.callbacks = {};
    window.statisticsForStrava.callbacks.formatSeconds = (secondsToFormat) => {
        const hours = String(Math.floor(secondsToFormat / 3600)).padStart(2, '0');
        const minutes = String(Math.floor((secondsToFormat % 3600) / 60)).padStart(2, '0');
        const seconds = String(secondsToFormat % 60).padStart(2, '0');

        return `${hours}:${minutes}:${seconds}`;
    };
    window.statisticsForStrava.callbacks.formatPace = (params) => {
        const paceSymbol = window.statisticsForStrava.unitSystem.paceSymbol;
        const secondsToFormat = params[0].value;
        if (secondsToFormat < 60) {
            return `<strong>${secondsToFormat}s</strong>${paceSymbol}`;
        }
        const minutes = Math.floor(secondsToFormat / 60);
        const secs = secondsToFormat % 60;
        return `<strong>${minutes}:${secs.toString().padStart(2, '0')}</strong>${paceSymbol}`;
    };
    window.statisticsForStrava.callbacks.symbolSize = function (params) {
        return (params[2] / 100) * 15 + 5;
    };
    window.statisticsForStrava.callbacks.toInteger = function (value) {
        return value.toFixed(0);
    };
</script>
<script src="{{ relativeUrl(asset('assets/echarts/echarts.min.js')) }}"></script>
<script src="{{ relativeUrl(asset('assets/echarts/echarts.world.min.js')) }}"></script>
<script src="{{ relativeUrl(asset('assets/lazyload.min.js')) }}"></script>
<script src="{{ relativeUrl(asset('assets/flowbite/flowbite.js')) }}"></script>
<script src="{{ relativeUrl(asset('assets/utils.js')) }}" type="module"></script>
<script src="{{ relativeUrl(asset('assets/router.js')) }}" type="module"></script>
<script src="{{ relativeUrl(asset('assets/leaflet/leaflet.js')) }}"></script>
<script src="{{ relativeUrl(asset('assets/leaflet/leaflet.polyline.encoded.js')) }}"></script>
<script src="{{ relativeUrl(asset('assets/leaflet/leaflet.fly.to.places.js')) }}"></script>
<script src="{{ relativeUrl(asset('assets/leaflet/leaflet-map.js')) }}" type="module"></script>
<script src="{{ relativeUrl(asset('assets/leaflet/heatmap.js')) }}" type="module"></script>
<script src="{{ relativeUrl(asset('assets/data-table/clusterize.min.js')) }}"></script>
<script src="{{ relativeUrl(asset('assets/data-table/data-table.js')) }}" type="module"></script>
<script src="{{ relativeUrl(asset('assets/lightgallery/lightgallery.umd.min.js')) }}" type="module"></script>
<script src="{{ relativeUrl(asset('assets/lightgallery/lightgallery.lg-zoom.min.js')) }}"></script>

<script type="module">
    import LeafletMap from "{{ relativeUrl('/assets/leaflet/leaflet-map.js') }}";
    import Heatmap from "{{ relativeUrl('/assets/leaflet/heatmap.js') }}";
    import DataTable from "{{ relativeUrl('/assets/data-table/data-table.js') }}";
    import Router from "{{ relativeUrl('/assets/router.js') }}";
    import {resolveEchartsCallbacks} from "{{ relativeUrl('/assets/utils.js') }}";

    const $main = document.querySelector("main");
    const $sideNav = document.querySelector("aside");
    const $topNav = document.querySelector("nav");

    // Toggle sidebar collapsed state.
    const sideNavCollapsed = localStorage.getItem('sideNavCollapsed');
    if (sideNavCollapsed === 'true') {
        $main.classList.add('sidebar-is-collapsed');
        $sideNav.classList.add('sidebar-is-collapsed');
        $topNav.classList.add('sidebar-is-collapsed');
    }

    document.getElementById('toggle-sidebar-collapsed-state').addEventListener('click', () => {
        $main.classList.toggle('sidebar-is-collapsed');
        $sideNav.classList.toggle('sidebar-is-collapsed');
        $topNav.classList.toggle('sidebar-is-collapsed');

        localStorage.setItem('sideNavCollapsed', 'false');
        if ($main.classList.contains('sidebar-is-collapsed')) {
            localStorage.setItem('sideNavCollapsed', 'true');
        }
    });

    // Boot router.
    const router = Router($main);
    router.boot();

    // Enable image lazy load.
    const lazyLoad = new LazyLoad({
        thresholds: "50px",
        callback_error: (img) => {
            img.setAttribute("src", "{{ relativeUrl('/assets/placeholder-broken.webp') }}");
        }
    });

    const modalSkeletonNode = document.getElementById('modal-skeleton');
    const modalContent = modalSkeletonNode.querySelector('#modal-content');
    const modalSpinner = modalSkeletonNode.querySelector('.spinner');
    let modal = null;
    let renderedChartsPerTab = [];
    let allRenderedCharts = [];
    document.addEventListener('pageWasLoaded', (e) => {
        if (modal) {
            // Close any old modals when a new page is loaded.
            modal.hide();
        }

        document.querySelectorAll('div[data-dataTable-settings]').forEach(function ($dataTableWrapperNode) {
            DataTable($dataTableWrapperNode).render()
        });

        renderedChartsPerTab = [];
        allRenderedCharts= [];
        initElements(document);

        if (e.detail && e.detail.modalId) {
            // Open modal.
            openModal(e.detail.modalId);
        }
    });
    document.addEventListener('pageWasLoaded.heatmap', () => {
        const $heatmapWrapper = document.querySelector('.heatmap-wrapper');
        Heatmap($heatmapWrapper).render();
    });
    document.addEventListener('dataTableClusterWasChanged', () => {
        initModals(document);
    });

    document.getElementById('toggle-sidebar-collapsed-state').addEventListener('click', () => {
        allRenderedCharts.forEach(chart => {
            chart.resize();
        });
    })

    window.addEventListener('resize', function () {
        allRenderedCharts.forEach(chart => {
            chart.resize();
        });
    });

    const initElements = (rootNode) => {
        lazyLoad.update();

        initTabs(rootNode);
        initPopovers();
        initTooltips();
        initDropdowns();
        initAccordions();
        initModals(rootNode);

        // Render charts.
        const connectedCharts = [];
        rootNode.querySelectorAll('[data-echarts-options]').forEach(function (chartNode) {
            const chart = echarts.init(chartNode);
            const chartOptions = JSON.parse(chartNode.getAttribute('data-echarts-options'));
            resolveEchartsCallbacks(chartOptions, 'tooltip.formatter');
            resolveEchartsCallbacks(chartOptions, 'tooltip.valueFormatter');
            resolveEchartsCallbacks(chartOptions, 'yAxis.axisLabel.formatter');
            resolveEchartsCallbacks(chartOptions, 'yAxis[].axisLabel.formatter');
            resolveEchartsCallbacks(chartOptions, 'series.symbolSize');

            chart.setOption(chartOptions);
            if (chartNode.hasAttribute('data-echarts-connect')) {
                connectedCharts.push(chart);
            }

            allRenderedCharts.push(chart);

            const $tabPanel = chartNode.closest('div[role="tabpanel"]');
            if ($tabPanel) {
                const tabPanelId = $tabPanel.getAttribute('id');
                renderedChartsPerTab[tabPanelId] = renderedChartsPerTab[tabPanelId] || [];
                renderedChartsPerTab[tabPanelId].push(chart);
            }
        });
        echarts.connect(connectedCharts);

        // Render Leaflet maps.
        rootNode.querySelectorAll('[data-leaflet]').forEach(function (mapNode) {
            const data = JSON.parse(mapNode.getAttribute('data-leaflet'));
            LeafletMap(mapNode, data).render();
        });

        // Init Lightgallery.
        rootNode.querySelectorAll('[data-light-gallery-elements]').forEach(function (node) {
            const elements = JSON.parse(node.getAttribute('data-light-gallery-elements'));

            const dynamicGallery = lightGallery(node, {
                dynamic: true,
                plugins: [lgZoom],
                backdropDuration: 200,
                dynamicEl: elements,
            });

            node.addEventListener('click', () => {
                dynamicGallery.openGallery();
            });
        });

    };

    const initModals = (rootNode) => {
        const modalLinks = rootNode.querySelectorAll('a[data-model-content-url]');

        modalLinks.forEach(function (node) {
            node.addEventListener('click', function (e) {
                e.preventDefault();
                const modalId = node.getAttribute('data-model-content-url');
                openModal(modalId);
                // Add modal to history state.
                router.pushCurrentRouteToHistoryState(modalId);
            });
        });
    };

    const initTabs = (rootNode) => {
        rootNode.querySelectorAll('[data-tabs]').forEach(function ($triggerEl) {
            const tabItems = [];

            $triggerEl
                .querySelectorAll('[role="tab"]')
                .forEach(function ($triggerEl) {
                    const dataTabsTarget = $triggerEl.getAttribute('data-tabs-target');
                    tabItems.push({
                        id: dataTabsTarget,
                        triggerEl: $triggerEl,
                        targetEl: document.querySelector(dataTabsTarget),
                    });
                });

            new Tabs($triggerEl, tabItems, {
                defaultTabId: null,
                activeClasses: 'text-strava-orange border-strava-orange hover:text-gray-600 hover:border-gray-300',
                inactiveClasses: 'text-gray-500 hover:text-gray-600 border-gray-100 hover:border-gray-300',
                onShow: (tabs, activeTab) => {
                    const activeTabId = activeTab.id.replace('#', '');
                    if (activeTabId in renderedChartsPerTab) {
                        // Trigger a chart resize to make sure charts are rendered and displayed.
                        renderedChartsPerTab[activeTabId].forEach((chart) => chart.resize());
                    }

                },
            });
        });
    }

    export const openModal = (modalId) => {
        if (modal) {
            // Only allow one open modal at a time.
            modal.hide();
        }

        // Show loading state.
        modalSpinner.classList.remove('hidden');
        modalSpinner.classList.add('flex');

        modal = new Modal(modalSkeletonNode, {
            placement: 'bottom',
            closable: true,
            backdropClasses: 'bg-gray-900/50 fixed inset-0 z-1400',
            onShow: async () => {
                const response = await fetch(modalId, {cache: 'no-store'});
                // Remove loading state.
                modalSpinner.classList.add('hidden');
                modalSpinner.classList.remove('flex');

                modalContent.innerHTML = await response.text();
                // Init elements in modal.
                initElements(modalSkeletonNode);
                // Modal close event listeners.
                modalContent.querySelector('button.close').addEventListener('click', (e) => {
                    e.preventDefault();
                    modal.hide();
                    router.pushCurrentRouteToHistoryState();
                });

                document.body.addEventListener('keydown', (e) => {
                    if (e.key !== 'Escape') {
                        return;
                    }
                    router.pushCurrentRouteToHistoryState();
                }, {once: true});

                document.body.addEventListener('click', (e) => {
                    if (e.target.id !== 'modal-skeleton') {
                        return;
                    }
                    router.pushCurrentRouteToHistoryState();
                }, {once: true});
            },
            onHide: () => {
                modalContent.innerHTML = '';
            }
        });

        modal.show();
    }

    const updateGithubLatestRelease = async () => {
        const $latestVersionEl = document.querySelector('[data-latest-version]');
        const currentVersion = $latestVersionEl.getAttribute('data-current-version')
        const latestVersion = await (await (await fetch('https://api.github.com/repos/robiningelbrecht/statistics-for-strava/releases/latest')).json())['name'];

        if (currentVersion !== latestVersion) {
            const $latestVersionLink = $latestVersionEl.querySelector('a');
            $latestVersionLink.setAttribute('href', $latestVersionLink.getAttribute('href').replace('[LATEST_VERSION]', latestVersion));
            $latestVersionLink.innerHTML = $latestVersionLink.innerHTML.replace('[LATEST_VERSION]', latestVersion);
            $latestVersionEl.classList.remove('hidden');
        }
    }

    updateGithubLatestRelease();
</script>
</body>
</html>