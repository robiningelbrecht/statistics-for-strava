{% extends "html/base.html.twig" %}

{% block breadcrumbs %}
    <li>
        <div class="flex items-center">
            <svg class="w-6 h-6 text-gray-400" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path></svg>
            <a href="#" data-router-navigate="{{ relativeUrl('gear-stats') }}" class="ml-1 text-gray-700 hover:text-primary-600 md:ml-2">{{ "Gear"|trans }}</a>
        </div>
    </li>
    <li>
        <div class="flex items-center">
            <svg class="w-6 h-6 text-gray-400" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path></svg>
            <a href="#" data-router-navigate="{{ relativeUrl('gear/maintenance') }}" class="ml-1 text-gray-700 hover:text-primary-600 md:ml-2">{{ "Maintenance"|trans }}</a>
        </div>
    </li>
{% endblock %}
{% block content %}
    {% autoescape false %}
        <div class="grid grid-cols-1 gap-4">
            <div class="mb-4 p-4 bg-white border border-gray-200 rounded-lg shadow-xs">
                <div class="flex items-center justify-between">
                    <h3 class="mb-4 text-lg font-semibold">
                        {{ "Gear maintenance"|trans }}
                    </h3>
                    <a href="#" data-model-content-url="{{ relativeUrl('gear/info.html') }}">
                        <svg class="w-5 h-5 text-gray-400" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd"></path></svg>
                    </a>
                </div>
                {% if errors is not empty %}
                    <div class="flex mb-4 p-4 text-sm text-red-800 border border-red-300 rounded-lg bg-red-50"
                         role="alert">
                        <svg class="shrink-0 inline w-4 h-4 me-3 mt-[2px]" aria-hidden="true"
                             xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z"/>
                        </svg>
                        <span class="sr-only">Info</span>
                        <div>
                            <span class="font-medium">{{ "We detected following issues"|trans }}:</span>
                            <ul class="mt-1.5 list-disc list-inside">
                                {% for error in errors %}
                                    <li>{{ error }}</li>
                                {% endfor %}
                            </ul>
                        </div>
                    </div>
                {% endif %}
                {% if warnings is not empty %}
                    <div class="flex mb-4 p-4 text-sm text-yellow-800 border border-yellow-300 rounded-lg bg-yellow-50"
                         role="alert">
                        <svg class="shrink-0 inline w-4 h-4 me-3 mt-[2px]" aria-hidden="true"
                             xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z"/>
                        </svg>
                        <span class="sr-only">Info</span>
                        <div>
                            <span class="font-medium">{{ "Please address these issues"|trans }}:</span>
                            <ul class="mt-1.5 list-disc list-inside">
                                {% for warning in warnings %}
                                    <li>{{ warning }}</li>
                                {% endfor %}
                            </ul>
                        </div>
                    </div>
                {% endif %}
                <div class="relative overflow-x-auto">
                    <table class="w-full text-sm text-center text-gray-500">
                        <thead class="text-xs text-gray-700 uppercase bg-gray-50">
                        <tr>
                            <th class="px-2"></th>
                            <th scope="col" class="px-2 py-3">
                                {{ "Gear"|trans }}
                            </th>
                            <th scope="col" class="text-left px-2 py-3">

                            </th>
                            <th scope="col" class="px-6 py-3">
                                <div class="flex items-center justify-center">
                                    {{ renderSvg('distance') }}
                                </div>
                            </th>
                            <th scope="col" class="px-6 py-3">
                                {{ "Components"|trans }}
                            </th>
                        </tr>
                        </thead>
                        <tbody data-accordion="table-gears"
                               data-active-classes="text-gray-700"
                               data-inactive-classes="text-gray-700">
                        {% for gear in gearsAttachedToComponents %}
                            {% set componentsAttachedToGear = gearComponents|filter(component => component.isAttachedTo(gear.getId())) %}
                            <tr class="border-b aria-expanded:bg-gray-100 hover:aria-expanded:bg-gray-200 hover:bg-gray-200 cursor-pointer"
                                id="table-gears-header-{{ loop.index0 }}"
                                data-accordion-target="#table-gears-content-{{ loop.index0 }}"
                                aria-expanded="false" aria-controls="table-gears-content-{{ loop.index0 }}">
                                <td class="w-[1rem] p-2 text-gray-900">
                                    <svg data-accordion-icon class="w-3 h-3 rotate-180 shrink-0" aria-hidden="true"
                                         xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6">
                                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"
                                              stroke-width="2"
                                              d="M9 5 5 1 1 5"/>
                                    </svg>
                                </td>
                                <td class="py-2">
                                    <img class="w-auto h-8 rounded-sm object-cover lazy"
                                         src="{{ renderComponent('placeholder-image') }}"
                                         data-src="{{ gear.getImageSrc() }}"
                                         alt="{{ gear.getName() }}"/>
                                </td>
                                <th scope="row" class="text-left truncate px-2 py-2 font-medium text-gray-900 whitespace-nowrap">
                                    <div class="flex items-center">
                                        {% if gearIdsThatHaveDueTasks.has(gear.getId()) %}
                                            <span class="flex w-3 h-3 me-2 bg-red-500 rounded-full animate-pulse" title="{{ "One of your gear maitenance tasks is due"|trans }}"></span>
                                        {% endif %}
                                        <div>{{ gear.getName() }}</div>
                                    </div>
                                </th>
                                <td class="px-6 py-2 truncate">
                                    {{ renderComponent('measurement', {'measurement': gear.getDistance(), 'precision': 0}) }}
                                </td>
                                <td class="px-6 py-2 truncate">
                                    {{ componentsAttachedToGear|map(component => component.getLabel())|join(', ') }}
                                </td>
                            </tr>
                            <tr class="border-b hidden overflow-x-auto w-full"
                                id="table-gears-content-{{ loop.index0 }}"
                                aria-labelledby="table-gears-header-{{ loop.index0 }}">
                                <td colspan="5" class="p-[1rem] text-left">
                                    <div class="grid gap-2">
                                        {% for gearComponent in componentsAttachedToGear %}
                                            <div class="flex items-center bg-white border border-gray-200 rounded-lg shadow-sm">
                                                <div class="w-48 h-full">
                                                    <img class="lazy object-cover w-full h-full rounded-t-lg md:rounded-none md:rounded-s-lg"
                                                         src="{{ renderComponent('placeholder-image') }}"
                                                         data-src="{{ relativeUrl('/gear-maintenance/' ~ gearComponent.getImgSrc()) }}"
                                                         alt="{{ gearComponent.getLabel() }}">
                                                </div>
                                                <div class="w-full flex flex-col justify-between p-4 leading-normal">
                                                    <h5 class="mb-1 text-2xl font-bold tracking-tight text-gray-900">{{ gearComponent.getLabel() }}</h5>
                                                    <div class="grid grid-cols-1 xl:grid-cols-2 gap-y-4 divide-x *:px-4 -mx-4 font-normal text-gray-700">
                                                        {% for maintenanceTask in gearComponent.getMaintenanceTasks() %}
                                                            {% set mostRecentTaskTag = maintenanceTaskTags.getMostRecentFor(maintenanceTask.getTag()) %}
                                                            <div class="flex flex-col">
                                                                <div class="flex justify-between">
                                                                    <div>
                                                                        {{ "{maintenanceTaskLabel} every {interval}"|trans({
                                                                            '{maintenanceTaskLabel}': maintenanceTask.getLabel(),
                                                                            '{interval}': maintenanceTask.getIntervalValue() ~ ' ' ~ maintenanceTask.getIntervalUnit().value
                                                                        }) }}
                                                                    </div>
                                                                    <span class="bg-gray-100 text-gray-800 text-xs font-medium me-2 px-2.5 py-0.5 rounded-sm">
                                                                            {{ maintenanceTask.getTag() }}
                                                                        </span>
                                                                </div>
                                                                <span class="text-xs">
                                                                        {{ "Last maintenance"|trans }}:
                                                                        {% if mostRecentTaskTag is not null %}
                                                                            {{ mostRecentTaskTag.getTaggedOn()|formatDate('normal') }}
                                                                        {% else %}
                                                                            {{ "never"|trans }}
                                                                        {% endif %}
                                                                    </span>
                                                                {% set progress = calculateMaintenanceTaskProgress(
                                                                    gearComponent.getAttachedTo(),
                                                                    mostRecentTaskTag.getTaggedOnActivityId(),
                                                                    mostRecentTaskTag.getTaggedOn(),
                                                                    maintenanceTask.getIntervalUnit(),
                                                                    maintenanceTask.getIntervalValue()
                                                                ) %}
                                                                {% if progress.isZero() %}
                                                                    {% set colors = {'bg':'bg-gray-200','text':'text-gray-700'} %}
                                                                {% elseif progress.isLow() %}
                                                                    {% set colors = {'bg':'bg-green-600','text':'text-green-700'} %}
                                                                {% elseif progress.isMedium() %}
                                                                    {% set colors = { 'bg':'bg-yellow-400','text':'text-yellow-700'} %}
                                                                {% elseif progress.isHigh() %}
                                                                    {% set colors = {'bg':'bg-red-600', 'text':'text-red-700'} %}
                                                                {% endif %}
                                                                <div class="mt-2">
                                                                    <div class="mb-1">
                                                                        <span class="{{ colors.text }} text-sm font-medium">{{ progress.getDescription() }}</span>
                                                                    </div>
                                                                    <div class="w-full bg-gray-200 rounded-full h-2.5">
                                                                        <div class="{{ colors.bg }} h-2.5 rounded-full"
                                                                             style="width: {{ progress.getPercentage() }}%"></div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        {% endfor %}
                                                    </div>
                                                </div>
                                            </div>
                                        {% endfor %}
                                    </div>
                                </td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    {% endautoescape %}
{% endblock %}