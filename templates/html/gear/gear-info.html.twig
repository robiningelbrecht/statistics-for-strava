{% autoescape false %}
    <!-- Modal header -->
    <div class="flex items-center justify-between p-4 md:p-5 border-b rounded-t">
        <h3 class="flex items-center text-lg font-semibold text-gray-900">
            <span>{{ "Gear details"|trans }}</span>
        </h3>
        <div class="flex items-center">
            <button type="button" class="close text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center">
                <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
                </svg>
                <span class="sr-only">{{ "Close modal"|trans }}</span>
            </button>
        </div>
    </div>
    <!-- Modal body -->
    <div class="p-4 md:p-5 space-y-4">
        <div class="relative overflow-x-auto">
            <table class="w-full text-sm text-center text-gray-500">
                <thead class="text-xs text-gray-700 uppercase bg-gray-50">
                <tr>
                    <th scope="col" class="px-2 py-3">
                        {{ "Name"|trans }}
                    </th>
                    <th scope="col" class="px-2 py-3">
                        {{ "Id"|trans }}
                    </th>
                    <th scope="col" class="px-6 py-3">
                        <div class="flex items-center justify-center">
                            {{ renderSvg('distance') }}
                        </div>
                    </th>
                </tr>
                </thead>
                <tbody>
                {% for gear in gears %}
                    <tr class="{{ cycle(['bg-white border-b', 'border-b bg-gray-50'], loop.index0) }}">
                        <th scope="row" class="px-2 py-2 sticky left-0 font-medium text-gray-900 whitespace-nowrap {{ cycle(['bg-white', 'bg-gray-50'], loop.index0) }}">
                            {{ gear.getName() }}
                        </th>
                        <td class="px-6 py-2 truncate">
                            {{ gear.getId().toUnprefixedString() }}
                        </td>
                        <td class="px-6 py-2 truncate">
                            {{ renderComponent('measurement', {'measurement': gear.getDistance(), 'precision': 0}) }}
                        </td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        </div>
    </div>
{% endautoescape %}